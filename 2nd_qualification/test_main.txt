from djitellopy import tello
import numpy as np
import time
import cv2

start_hover = True
init_height = True

detect_G = False
QR_G = False

detect_R = False
QR_R = False

detect_B = False
QR_B = False

default_drone_up_down = 10
default_drone_right_left = 10
default_drone_forward_backward = 10
default_drone_yaw = 30

drone = tello.Tello()
drone.connect()
print(drone.get_battery())
drone.streamon()

#drone.takeoff()

start_time = time.time()
hover_time = 0
init_hover_time = True

try:
    while(True):
        # drone.send_rc_control에 전달할 변수
        left_right_velocity = 0
        forward_backward_velocity = 0
        up_down_velocity = 0
        yaw_velocity = 0
        drone_height = drone.get_height()

        if 고도 초기화 시작:
            if 드론 고도가 70인가?:
                고도 초기화 시작 = False
            elif 드론 고도가 70보다 작은가?:
                up_down_velocity = default_drone_up_down
            else:
                up_down_velocity = -default_drone_up_down
        else:
            드론 캠을 통해 영상 받아와서 영상처리

            if QR 값이 'hover' 인가?:
                5초간 호버링
                QR 값이 'hover' 인가? = False
            else:
                드론의 yaw를 돌리면서 탐색

                if G, R, B QR 인식되지 않았을 때:
                    if Green 사이즈가 1000 이상인가?:
                        드론을 아래로 내리면서 QR 대기
                        if QR 감지:
                            해당 미션 수행
                            QR_G = True
                    else:
                        Green을 향해 전진
                if G QR만 인식 됐을 때:
                    if Red 사이즈가 1000 이상인가?:
                        드론을 아래로 내리면서 QR 대기
                        if QR 감지:
                            해당 미션 수행
                            QR_R = True
                    else:
                        Red를 향해 전진
                if G, R QR만 인식 됐을 때:
                    if Blue 사이즈가 1000 이상인가?:
                        드론을 아래로 내리면서 QR 대기
                        if QR 감지:
                            해당 미션 수행
                            QR_B = True
                    else:
                        Blue를 향해 전진
                if G, R, B 모두 인식:
                    #drone.land()
                    break


        drone.send_rc_control(left_right_velocity, forward_backward_velocity, up_down_velocity, yaw_velocity)

except KeyboardInterrupt:
    pass

